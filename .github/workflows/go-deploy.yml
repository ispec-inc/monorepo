name: go-deploy

on: 
  workflow_run:
    workflows:
      - go-test
    branches:
      - master
    types:
      - completed

jobs:
  ecr-push:
    name: ecr push
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: "ap-northeast-1"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: github-actions-test
        IMAGE_TAG: latest
      run: |
        docker build -t ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ github.sha }} .
        docker push     ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ github.sha }}

  update-platform-tag:
    name: update platform tag
    needs: ecr-push
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: checkout platform
      uses: actions/checkout@v3
      with:
        repository: ispec-inc/platform
        token: ${{ secrets.REVIEWDOG_GITHUB_TOKEN }}
        path: ./_platform

    - name: install yq
      run: |
        mkdir ~/bin
        export YQ_VERSION=v4.2.0
        export YQ_BINARY=yq_linux_amd64
        export PATH=$PATH:~/bin
        wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/${YQ_BINARY} -O ~/bin/yq
        chmod +x ~/bin/yq

    - name: update stg's value 
      if: ${{ github.ref == 'refs/heads/master' }}
      run: |
        cd _platform
        echo "tag=${{ github.sha }} yq eval '.image.tag = env(tag)' somewhere/values.stg.yaml -i"

    - name: update prd's value 
      if: ${{ github.ref == '?' }}
      run: |
        cd _platform
        echo "tag=${{ github.sha }} yq eval '.image.tag = env(tag)' somewhere/values.prd.yaml -i"

    - name: commit & push changes if stg
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: actions-js/push@master
      with:
        github_token: ${{ secrets.REVIEWDOG_GITHUB_TOKEN }}
        message: 'auto: update go stg tag'
        repository: ispec-inc/platform
        branch: master
        directory: ./_platform

    - name: current datetime
      id: timestamp
      run: echo "::set-output name=timestamp::$(TZ='Asia/Tokyo' date +'%Y.%m%d.%H%M')"

    - name: create pull request if prd
      if: ${{ github.ref == '?' }}
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.REVIEWDOG_GITHUB_TOKEN }}
        commit-message: "auto: update go prd tag (${{ steps.timestamp.outputs.timestamp }})"
        branch: release/go/${{ steps.timestamp.outputs.timestamp }}
        delete-branch: true
        title: "[Auto] Release Go prd ${{ steps.timestamp.outputs.timestamp }}"
        body: |
          Auto Release Go to prd.
        labels: |
          release
          auto
        draft: false
        path: ./_platform
